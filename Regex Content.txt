I. Bảng regex:

Note: Chỉ match 1 kí tự

. : Khớp (match) với bất kỳ ký tự nào
^ : Khớp tại điểm bắt đầu
$ : Khớp ở cuối dòng
[abc] : Khớp với a hoặc b hoặc c
[abc][vz] : Khớp với a hoặc b hoặc c theo sau là v hoặc z
[^abc]: Khi dấu ^ xuất hiện như là nhân vật đầu tiên trong dấu ngoặc vuông, nó phủ nhận mô hình
Điều này có thể khớp với bất kỳ ký tự nào ngoại trừ a hoặc b hoặc c
[a-d1-7] : Phù hợp với một chuỗi giữa a và điểm d và con số từ 1 đến 7
X|Z : Tìm X hoặc Z
XZ Tìm X và theo sau là Z.
$ : Kiểm tra kết thúc dòng.
\d : Số bất kỳ, viết ngắn gọn cho [0-9]
\D : Ký tự không phải là số, viết ngắn gon cho [^0-9]
\s : Ký tự khoảng trắng, viết ngắn gọn cho [ \t\n\x0b\r\f]
\S : Ký tự không phải khoản trắng, viết ngắn gọn cho [^\s]
\w : Ký tự chữ, viết ngắn gọn cho [a-zA-Z_0-9]
\W : Ký tự không phải chữ, viết ngắn gọn cho [^\w]
\S+ : Một số ký tự không phải khoảng trắng (Một hoặc nhiều)
\b : Ký tự thuộc a-z hoặc A-Z hoặc 0-9 hoặc _, viết ngắn gọn cho [a-zA-Z0-9_]
* : Xuất hiện 0 hoặc nhiều lần, viết ngắn gọn cho {0,}
+ : Xuất hiện 1 hoặc nhiều lần, viết ngắn gọn cho {1,}
? : Xuất hiện 0 hoặc 1 lần, ? viết ngắn gọn cho {0,1}
{X} : Xuất hiện X lần, {}
{X,Y} : Xuất hiện trong khoảng X tới Y lần
*? : * có nghĩa là xuất hiện 0 hoặc nhiều lần, thêm ? phía sau nghĩa là tìm kiếm khớp nhỏ nhất
.* : Khớp với bất kỳ ký tự nào 0 hoặc nhiều lần 

- Ex1: chuoi = "abc11111111111111"; 	match = chuoi.matches(".*") => return true

- Ex2: chuoi = "mnp"; 	match = chuoi.matches("^m.+"); => return true

- Ex3: Kiểm tra toàn bộ s3 Ký tự bất kỳ xuất hiện 1 lần: . - tiếp theo là n, xuất hiện 1 hoặc tối đa 3 lần. - Kết thúc bởi p: p$
Kết hợp các quy tắc: . , {X,Y}, $=> true
s3 = "2nnp";
match = s3.matches(".n{1,3}p$"); => return true

II. Các ký tự đặc biệt trong Java Regex (Special characters):

\.[{(*+?^$|